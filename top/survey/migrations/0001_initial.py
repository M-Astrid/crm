# Generated by Django 2.0.2 on 2018-12-27 07:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(choices=[('ООО', 'ООО'), ('ОАО', 'ОАО'), ('ПАО', 'ПАО'), ('ЗАО', 'ЗАО'), ('АО', 'АО')], max_length=16, verbose_name='Форма')),
                ('name', models.CharField(max_length=128, verbose_name='Название организации')),
                ('inn', models.IntegerField(verbose_name='ИНН')),
                ('basic_survey', models.BooleanField(default=False, verbose_name='Базовый опрос пройден')),
                ('type', models.CharField(blank=True, choices=[('Государственная', (('Силовики', 'Силовики'), ('Гос. компания', 'Гос. компания'), ('Гос. учреждение', 'Гос. учреждение'))), ('Негосударственная', (('Ген. подрядчик', 'Ген. подрядчик'), ('Частная компания', 'Частная компания'), ('SMB', 'SMB')))], max_length=64, verbose_name='Тип организации')),
                ('sanctions', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, verbose_name='Санкции')),
                ('crimea', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, verbose_name='Крым')),
                ('imp', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, verbose_name='Импортозамещение')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Клиент добавлен')),
                ('changed_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClientChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('change', models.TextField(blank=True)),
                ('type', models.CharField(blank=True, max_length=64, verbose_name='Тип организации(old)')),
                ('sanctions', models.CharField(blank=True, max_length=6, verbose_name='Санкции(old)')),
                ('crimea', models.CharField(blank=True, max_length=6, verbose_name='Крым(old)')),
                ('imp', models.CharField(blank=True, max_length=6, verbose_name='Импортозамещение(old)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Client')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('father_name', models.CharField(max_length=64, verbose_name='Отчество')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('phone_number', models.CharField(blank=True, max_length=14, verbose_name='Телефон')),
                ('phone_number2', models.CharField(blank=True, max_length=14, verbose_name='Доп. телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('position', models.CharField(max_length=128, verbose_name='Должность')),
                ('client', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='survey.Client')),
            ],
            options={
                'verbose_name': 'Контактное лицо',
                'verbose_name_plural': 'Контактые лица',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=64)),
                ('model_row', models.CharField(max_length=64)),
                ('vendor1', models.CharField(max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('SKU', models.CharField(max_length=64)),
                ('vendor2', models.CharField(max_length=64)),
                ('model2', models.CharField(max_length=64)),
                ('SKU2', models.CharField(max_length=64)),
                ('product_type', models.CharField(choices=[('Сервера', 'Сервера'), ('СХД', 'СХД')], max_length=64, null=True, verbose_name='Направление')),
                ('form_factor', models.CharField(blank=True, choices=[('Форм-фактор Rack', 'Форм-фактор Rack'), ('Форм-фактор Tower', 'Форм-фактор Tower'), ('Блейд-сервер', 'Блейд-сервер')], max_length=64, null=True, verbose_name='Форм-фактор сервера')),
                ('type', models.CharField(blank=True, choices=[('СХД начального уровня', 'СХД начального уровня'), ('СХД общего назначения', 'СХД общего назначения'), ('Гибридная СХД', 'Гибридная СХД'), ('СХД для резервного копирования', 'СХД для резервного копирования'), ('СХД высокопроизводительного класса', 'СХД высокопроизводительного класса'), ('СХД система NAS', 'СХД система NAS'), ('СХД для расширения VMware', 'СХД для расширения VMware'), ('Программно-определяемая СХД', 'Программно-определяемая СХД'), ('СХД для видеоконтента', 'СХД для видеоконтента')], max_length=64, null=True, verbose_name='Тип СХД')),
                ('certificate', models.CharField(choices=[('?', '?'), ('ТОРП', 'ТОРП'), ('СТ1', 'СТ1'), ('EAC', 'EAC')], default='?', max_length=32, verbose_name='Сертификация')),
                ('upgrade', models.CharField(choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, null=True, verbose_name='Апгрейд')),
                ('sanctions', models.CharField(choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=8, verbose_name='Санкции')),
                ('crimea', models.CharField(choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=8, verbose_name='Крым')),
                ('imp', models.CharField(blank=True, choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, verbose_name='Импортозамещение')),
                ('price_bracket', models.CharField(choices=[('(1)Premium', '(1)Premium'), ('(2)Средняя цен. кат.', '(2)Средняя цен. кат.'), ('(3)No name', '(3)No name')], max_length=64, verbose_name='Бюджет')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['group', 'price_bracket', 'vendor2'],
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, verbose_name='Название заказа')),
                ('status', models.CharField(choices=[('Запрос', 'Запрос'), ('Лид', 'Лид'), ('Заявка', 'Заявка'), ('Отказ', 'Отказ'), ('Успешно реализован', 'Успешно реализован')], max_length=64, verbose_name='Статус')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('changed_at', models.DateTimeField(auto_now=True)),
                ('decline_reason', models.TextField(blank=True, verbose_name='Причина отказа')),
                ('comments', models.TextField(blank=True, verbose_name='Примечания к заказу')),
                ('survey', models.BooleanField(default=False, verbose_name='Опрос пройден')),
                ('product_type', models.CharField(choices=[('Сервера', 'Сервера'), ('СХД', 'СХД')], max_length=64, null=True, verbose_name='Направление')),
                ('form_factor', models.CharField(blank=True, choices=[('Форм-фактор Rack', 'Форм-фактор Rack'), ('Форм-фактор Tower', 'Форм-фактор Tower'), ('Блейд-сервер', 'Блейд-сервер')], max_length=64, null=True, verbose_name='Форм-фактор сервера')),
                ('type', models.CharField(blank=True, choices=[('СХД начального уровня', 'СХД начального уровня'), ('СХД общего назначения', 'СХД общего назначения'), ('Гибридная СХД', 'Гибридная СХД'), ('СХД для резервного копирования', 'СХД для резервного копирования'), ('СХД высокопроизводительного класса', 'СХД высокопроизводительного класса'), ('СХД система NAS', 'СХД система NAS'), ('СХД для расширения VMware', 'СХД для расширения VMware'), ('Программно-определяемая СХД', 'Программно-определяемая СХД'), ('СХД для видеоконтента', 'СХД для видеоконтента')], max_length=64, null=True, verbose_name='Тип СХД')),
                ('upgrade', models.CharField(choices=[('Да', 'Да'), ('Нет', 'Нет'), ('?', '?')], max_length=6, null=True, verbose_name='Апгрейд')),
                ('certificate', models.CharField(choices=[('?', '?'), ('ТОРП', 'ТОРП'), ('СТ1', 'СТ1'), ('EAC', 'EAC')], default='EAC', max_length=32, verbose_name='Сертификация')),
                ('fav_brands', models.CharField(choices=[('(1)Premium', '(1)Premium'), ('(2)Средняя цен. кат.', '(2)Средняя цен. кат.'), ('(3)No name', '(3)No name')], max_length=128, verbose_name='Ценовая категория предпочитаемых брендов')),
                ('survey_comments', models.TextField(blank=True, verbose_name='Примечания к опросу')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='survey.Client')),
                ('lead_items', models.ManyToManyField(related_name='l_items', to='survey.Item', verbose_name='Лид')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('order_items', models.ManyToManyField(blank=True, related_name='o_items', to='survey.Item', verbose_name='Заявка')),
                ('query_items', models.ManyToManyField(related_name='q_items', to='survey.Item', verbose_name='Запрос')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-added_at'],
            },
        ),
    ]
